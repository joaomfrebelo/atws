<?php

/**
 * MIT License
 *
 * Copyright (c) 2019 João M F Rebelo
 */
declare(strict_types=1);

namespace Rebelo\ATWs\EFaturaMDVersion\WorkDocument;

use Rebelo\ATWs\ATWsException;
use Rebelo\ATWs\EFaturaMDVersion\DocumentTotals;
use Rebelo\Date\Date;
use Rebelo\Date\Pattern;

/**
 * Conference Document Data (WorkData)
 * Conference Documents.
 * @since 2.0.0
 */
class WorkData
{

    /**
     * @var \Logger
     * @since 2.0.0
     */
    protected \Logger $log;

    /**
     * @param \Rebelo\ATWs\EFaturaMDVersion\WorkDocument\WorkHeader $workHeader      The work document header
     * @param \Rebelo\ATWs\EFaturaMDVersion\WorkDocument\WorkStatus $documentStatus  The actual work document status
     * @param string                                                $hashCharacters  It must contain the 1st, 11th, 21st and 31st characters of the document's Hash or the value “0” (zero), if the document is generated by a non-certified program.
     * @param string|null                                           $eacCode         The CAE code of the activity related to the issuance of this document must be indicated.
     * @param \Rebelo\Date\Date                                     $systemEntryDate Record recording date to the second, at the time of signature.
     * @param \Rebelo\ATWs\EFaturaMDVersion\Line[]                  $lines           Document Lines by Rate (Line)
     * @param \Rebelo\ATWs\EFaturaMDVersion\DocumentTotals          $documentTotals  The Document Totals
     * @throws \Rebelo\Date\DateFormatException
     * @throws \Rebelo\ATWs\ATWsException
     * @since 2.0.0
     */
    public function __construct(
        protected WorkHeader     $workHeader,
        protected WorkStatus     $documentStatus,
        protected string         $hashCharacters,
        protected ?string        $eacCode,
        protected Date           $systemEntryDate,
        protected array          $lines,
        protected DocumentTotals $documentTotals
    )
    {
        $this->log = \Logger::getLogger(\get_class($this));
        $this->log->debug(__METHOD__);

        $this->log->info("Hash characters set to " . $this->hashCharacters);
        $this->log->info("EACCode set to " . ($this->eacCode ?? "null"));

        if ($this->eacCode !== null && \preg_match("/^[0-9]{5}$/", $this->eacCode) !== 1) {
            $msg = "EACCode must respect the regexp ^[0-9]{5}$";
            $this->log->error($msg);
            throw new ATWsException($msg);
        }

        $this->log->info("SystemEntryDate set to " . $this->systemEntryDate->format(Pattern::DATE_T_TIME));
    }

    /**
     * It must contain the 1st, 11th, 21st and 31st characters of the document's Hash or the value “0” (zero),
     * if the document is generated by a non-certified program.
     * @return string
     * @since 2.0.0
     */
    public function getHashCharacters(): string
    {
        return $this->hashCharacters;
    }

    /**
     * The CAE code of the activity related to the issuance of this document must be indicated.
     * @return string|null
     * @since 2.0.0
     */
    public function getEacCode(): ?string
    {
        return $this->eacCode;
    }

    /**
     * Record recording date to the second, at the time of signature.
     * @return \Rebelo\Date\Date
     * @since 2.0.0
     */
    public function getSystemEntryDate(): Date
    {
        return $this->systemEntryDate;
    }

    /**
     * The document lines
     * @return array
     * @since 2.0.0
     */
    public function getLines(): array
    {
        return $this->lines;
    }

    /**
     * The document totals
     * @return \Rebelo\ATWs\EFaturaMDVersion\DocumentTotals
     * @since 2.0.0
     */
    public function getDocumentTotals(): DocumentTotals
    {
        return $this->documentTotals;
    }

    /**
     * Get the actual invoice status
     * @return \Rebelo\ATWs\EFaturaMDVersion\WorkDocument\WorkStatus
     * @since 2.0.0
     */
    public function getDocumentStatus(): WorkStatus
    {
        return $this->documentStatus;
    }

    /**
     * The payment header
     * @return \Rebelo\ATWs\EFaturaMDVersion\WorkDocument\WorkHeader
     * @since 2.0.0
     */
    public function getWorkHeader(): WorkHeader
    {
        return $this->workHeader;
    }

}
